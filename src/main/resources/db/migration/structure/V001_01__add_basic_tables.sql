CREATE TABLE composers
(
--  Why not to use SERIAL any more: https://www.2ndquadrant.com/en/blog/postgresql-10-identity-columns/
	id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	created_at   TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modified_at  TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,

--  VARCHAR without restriction: https://wiki.postgresql.org/wiki/Don%27t_Do_This#Don.27t_use_varchar.28n.29_by_default
	first_name   VARCHAR                  NULL,
	last_name    VARCHAR                  NOT NULL,
	day_of_birth DATE                     NULL,
	day_of_death DATE                     NULL
);

CREATE TABLE arrangers
(
	id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	created_at   TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modified_at  TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,

	first_name   VARCHAR                  NULL,
	last_name    VARCHAR                  NOT NULL,
	day_of_birth DATE                     NULL,
	day_of_death DATE                     NULL
);

CREATE TABLE parts
(
	id          BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	created_at  TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modified_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,

	name        VARCHAR UNIQUE           NOT NULL,
	description VARCHAR                  NULL
);

CREATE TABLE scores
(
	id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	created_at   TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modified_at  TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,

	score_number INT UNIQUE               NOT NULL,
	title        VARCHAR                  NOT NULL,
	description  VARCHAR                  NULL,
	composer_id  BIGINT                   NULL REFERENCES composers (id) ON UPDATE CASCADE,
	arranger_id  BIGINT                   NULL REFERENCES arrangers (id) ON UPDATE CASCADE,
	publisher    VARCHAR                  NULL
);

CREATE TABLE concerts
(
	id          BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	created_at  TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modified_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,

	name        VARCHAR                  NOT NULL,
	date        DATE UNIQUE              NOT NULL,
	location    VARCHAR                  NOT NULL
);

CREATE TABLE score_part
(
	id       BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	score_id BIGINT REFERENCES scores (id) ON UPDATE CASCADE ON DELETE CASCADE,
	part_id  BIGINT REFERENCES parts (id) ON UPDATE CASCADE,
	analog   BOOLEAN NOT NULL,
	digital  BOOLEAN NOT NULL,
	UNIQUE (score_id, part_id)
);

CREATE TABLE concert_score
(
	id         BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	concert_id BIGINT REFERENCES concerts (id) ON UPDATE CASCADE ON DELETE CASCADE,
	score_id   BIGINT REFERENCES scores (id) ON UPDATE CASCADE,
	UNIQUE (concert_id, score_id)
);
